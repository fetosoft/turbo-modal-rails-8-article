// @tailwindcss/aspect-ratio@0.4.2 downloaded from https://ga.jspm.io/npm:@tailwindcss/aspect-ratio@0.4.2/src/index.js

import*as t from"tailwindcss/plugin";var a="default"in t?t.default:t;var e={};const o=a;const s={position:"relative",paddingBottom:"calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%)"};const i={position:"absolute",height:"100%",width:"100%",top:"0",right:"0",bottom:"0",left:"0"};const n={".aspect-none":{position:"static",paddingBottom:"0"},".aspect-none > *":{position:"static",height:"auto",width:"auto",top:"auto",right:"auto",bottom:"auto",left:"auto"}};const c=o((function({addComponents:t,matchComponents:a,theme:e,variants:o,e:c}){const p=e("aspectRatio");if(a){a({"aspect-w":t=>[{...s,"--tw-aspect-w":t},{"> *":i}],"aspect-h":t=>({"--tw-aspect-h":t})},{values:p});t(n);return}const r=Object.entries(p).map((([t,a])=>`.${c(`aspect-w-${t}`)}`)).join(",\n");const h=Object.entries(p).map((([t,a])=>`.${c(`aspect-w-${t}`)} > *`)).join(",\n");t([{[r]:s,[h]:i},n,Object.entries(p).map((([t,a])=>({[`.${c(`aspect-w-${t}`)}`]:{"--tw-aspect-w":a}}))),Object.entries(p).map((([t,a])=>({[`.${c(`aspect-h-${t}`)}`]:{"--tw-aspect-h":a}})))],o("aspectRatio"))}),{theme:{aspectRatio:{1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",10:"10",11:"11",12:"12",13:"13",14:"14",15:"15",16:"16"}},variants:{aspectRatio:["responsive"]}});e=c;var p=e;export{p as default};

